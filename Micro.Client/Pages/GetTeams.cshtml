@page "/getteams"
@inject IToaster toaster
@inject ITeamServiceClient teamServiceClient

<h1>All teams</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (teams == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in teams)
            {
                <tr>
                    <td>@t.ID</td>
                    <td>@t.Name</td>
                    <th>
                        <button class="btn btn-danger" onclick=@(() => OnButtonDeleteClicked(t.ID))>
                            Delete
                        </button>
                    </th>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    IEnumerable<Team> teams;

    protected override async Task OnInitAsync()
    {
        await this.RefreshAsync();
    }

    protected async Task OnButtonDeleteClicked(Guid teamId)
    {
        var success = await this.teamServiceClient.DeleteAsync(teamId);
        if (success)
        {
            toaster.Success("Team deleted successfully");
            await this.RefreshAsync();
        }
        else
        {
            this.toaster.Error("Failed to delete team...");
        }
    }

    private async Task RefreshAsync()
    {
        teams = await teamServiceClient.GetAllAsync();
    }

}
